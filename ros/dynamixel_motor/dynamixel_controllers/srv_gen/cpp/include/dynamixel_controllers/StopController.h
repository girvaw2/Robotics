/* Auto-generated by genmsg_cpp for file /home/billy/ros/stacks/dynamixel_motor/dynamixel_controllers/srv/StopController.srv */
#ifndef DYNAMIXEL_CONTROLLERS_SERVICE_STOPCONTROLLER_H
#define DYNAMIXEL_CONTROLLERS_SERVICE_STOPCONTROLLER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace dynamixel_controllers
{
template <class ContainerAllocator>
struct StopControllerRequest_ {
  typedef StopControllerRequest_<ContainerAllocator> Type;

  StopControllerRequest_()
  : controller_name()
  {
  }

  StopControllerRequest_(const ContainerAllocator& _alloc)
  : controller_name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _controller_name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  controller_name;


private:
  static const char* __s_getDataType_() { return "dynamixel_controllers/StopControllerRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "df2b10f2f876d82269ae3fc1e0538e11"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "b3f1f861a8aef49071034d2f06308f6e"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string controller_name\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, controller_name);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, controller_name);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(controller_name);
    return size;
  }

  typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct StopControllerRequest
typedef  ::dynamixel_controllers::StopControllerRequest_<std::allocator<void> > StopControllerRequest;

typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerRequest> StopControllerRequestPtr;
typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerRequest const> StopControllerRequestConstPtr;


template <class ContainerAllocator>
struct StopControllerResponse_ {
  typedef StopControllerResponse_<ContainerAllocator> Type;

  StopControllerResponse_()
  : success(false)
  , reason()
  {
  }

  StopControllerResponse_(const ContainerAllocator& _alloc)
  : success(false)
  , reason(_alloc)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _reason_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  reason;


private:
  static const char* __s_getDataType_() { return "dynamixel_controllers/StopControllerResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "a4d50a34d34f18de48e2436ff1472594"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "b3f1f861a8aef49071034d2f06308f6e"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool success\n\
string reason\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, success);
    ros::serialization::serialize(stream, reason);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, success);
    ros::serialization::deserialize(stream, reason);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(success);
    size += ros::serialization::serializationLength(reason);
    return size;
  }

  typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct StopControllerResponse
typedef  ::dynamixel_controllers::StopControllerResponse_<std::allocator<void> > StopControllerResponse;

typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerResponse> StopControllerResponsePtr;
typedef boost::shared_ptr< ::dynamixel_controllers::StopControllerResponse const> StopControllerResponseConstPtr;

struct StopController
{

typedef StopControllerRequest Request;
typedef StopControllerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct StopController
} // namespace dynamixel_controllers

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "df2b10f2f876d82269ae3fc1e0538e11";
  }

  static const char* value(const  ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xdf2b10f2f876d822ULL;
  static const uint64_t static_value2 = 0x69ae3fc1e0538e11ULL;
};

template<class ContainerAllocator>
struct DataType< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_controllers/StopControllerRequest";
  }

  static const char* value(const  ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string controller_name\n\
\n\
";
  }

  static const char* value(const  ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a4d50a34d34f18de48e2436ff1472594";
  }

  static const char* value(const  ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xa4d50a34d34f18deULL;
  static const uint64_t static_value2 = 0x48e2436ff1472594ULL;
};

template<class ContainerAllocator>
struct DataType< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_controllers/StopControllerResponse";
  }

  static const char* value(const  ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
string reason\n\
\n\
\n\
";
  }

  static const char* value(const  ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::dynamixel_controllers::StopControllerRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.controller_name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct StopControllerRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::dynamixel_controllers::StopControllerResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
    stream.next(m.reason);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct StopControllerResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<dynamixel_controllers::StopController> {
  static const char* value() 
  {
    return "b3f1f861a8aef49071034d2f06308f6e";
  }

  static const char* value(const dynamixel_controllers::StopController&) { return value(); } 
};

template<>
struct DataType<dynamixel_controllers::StopController> {
  static const char* value() 
  {
    return "dynamixel_controllers/StopController";
  }

  static const char* value(const dynamixel_controllers::StopController&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b3f1f861a8aef49071034d2f06308f6e";
  }

  static const char* value(const dynamixel_controllers::StopControllerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<dynamixel_controllers::StopControllerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_controllers/StopController";
  }

  static const char* value(const dynamixel_controllers::StopControllerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b3f1f861a8aef49071034d2f06308f6e";
  }

  static const char* value(const dynamixel_controllers::StopControllerResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<dynamixel_controllers::StopControllerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_controllers/StopController";
  }

  static const char* value(const dynamixel_controllers::StopControllerResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // DYNAMIXEL_CONTROLLERS_SERVICE_STOPCONTROLLER_H

